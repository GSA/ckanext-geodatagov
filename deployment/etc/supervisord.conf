[unix_http_server]
file=/tmp/supervisor.sock 

[supervisord]
logfile=/var/log/supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB       ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10          ; (num of main logfile rotation backups;default 10)
loglevel=info               ; (logging level;default info; others: debug,warn)
pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=true           ; (start in foreground if true;default false)
minfds=1024                 ; (min. avail startup file descriptors;default 1024)
minprocs=200                ; (min. avail process descriptors;default 200)


[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket
;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket
;username=chris              ; should be same as http_username if set
;password=123                ; should be same as http_password if set
;prompt=mysupervisor         ; cmd line prompt (default "supervisor")

; The below sample program section shows all possible program subsection values,
; create one or more 'real' program: sections to be able to control them under
; supervisor.
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[program:harvest-fetch]
command=ckan --plugin=ckanext-harvest harvester fetch_consumer          
process_name=%(program_name)s-%(process_num)s
numprocs=8
startretries=10000             ; max # of serial start failures (default 3)
stdout_logfile=/var/log/fetch-consumer.log  
redirect_stderr=true 


[program:harvest-gather]
command=ckan --plugin=ckanext-harvest harvester gather_consumer          
startretries=10000             ; max # of serial start failures (default 3)
stdout_logfile=/var/log/gather-consumer.log  
redirect_stderr=true 


[program:qa-update]
command=ckan --plugin=ckanext-qa qa update
process_name=%(program_name)s-%(process_num)s
numprocs=10
startretries=10000             ; max # of serial start failures (default 3)
stdout_logfile=/var/log/qa-update.log
redirect_stderr=true
autostart=false
autorestart=unexpected

[program:pycsw-load]
command=sh /usr/lib/ckan/bin/pycsw-load.sh
startretries=200
stdout_logfile=/var/log/pycsw_load.log
redirect_stderr=true
autostart=false
autorestart=unexpected

;command=/bin/cat            ; the program (relative uses PATH, can take args)
;priority=999                ; the relative start priority (default 999)
;autostart=true              ; start at supervisord start (default: true)
;autorestart=true            ; retstart at unexpected quit (default: true)
;startsecs=10                ; number of secs prog must stay running (def. 10)
;startretries=3              ; max # of serial start failures (default 3)
;exitcodes=0,2               ; 'expected' exit codes for process (default 0,2)
;stopsignal=QUIT             ; signal used to kill process (default TERM)
;stopwaitsecs=10             ; max num secs to wait before SIGKILL (default 10)
;user=chrism                 ; setuid to this UNIX account to run the program
;log_stdout=true             ; if true, log program stdout (default true)
;log_stderr=true             ; if true, log program stderr (def false)
;logfile=/var/log/cat.log    ; child log path, use NONE for none; default AUTO
;logfile_maxbytes=1MB        ; max # logfile bytes b4 rotation (default 50MB)
;logfile_backups=10          ; # of logfile backups (default 10)


